{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Calcifer here is a complete guid about calcifer developments and how to use this project as an open source project. calcifer is an open source project under the MIT licence (2015). you can clone and use the latest version of project. it's free to use in any scale(personal, enterprise, researches and ...). now I have to count you the main chapters our github repository Chapters get started database models APIs external self developed libraries terms of use","title":"Home"},{"location":"#calcifer","text":"here is a complete guid about calcifer developments and how to use this project as an open source project. calcifer is an open source project under the MIT licence (2015). you can clone and use the latest version of project. it's free to use in any scale(personal, enterprise, researches and ...). now I have to count you the main chapters our github repository","title":"Calcifer"},{"location":"#chapters","text":"get started database models APIs external self developed libraries terms of use","title":"Chapters"},{"location":"terms/","text":"Copyright Copyright (c) 2019 Calcifer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Terms Of Use"},{"location":"terms/#copyright","text":"Copyright (c) 2019 Calcifer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Copyright"},{"location":"apis/","text":"APIs calcifer engine implements several apis to use it completely from outside. apis helps to outsource the project and just use the backend part. APIs are based on REST and JSON tech. there are some common rules between all apis in calcifer. Requests requests have different parts: verb , endpoint and parameters . verbs verb description GET to retrive items or other informations. non-action POST to do an action. this verb doesn't create any entity in database by itself PUT create and update and actual entity in database DELETE delete an entity from database endpoints endpoints completely explained in REST APIs . parameters you are free to send your parameters in json or form-encoded or www-urlencoded . but consider that you can upload files just when you are using form data inputs. Responses responses have two parts: content and http response code . HTTP Response Code every different http code means something: HTTP code description 200 request was successfull 400 bad request. some errors in validation of inputs 401 client is unauthorized 402 client doesn't have enough credits 403 client doesn't have access to entity 404 requested entity not found 405 requested endpoint had different verb. used wrong verb in request 419 client is spaming the service 500 server internal error Content contents are in json format. but the structure is different for each http response code: 200 content of this http code doesn't have any structure. 400 content of this http code is the validation errors that happened. here is the structure: [ { \"code\" : STRING, \"field\": STRING, \"message\": STRING }, ] code is a unique merge of field and the unvalid rule. field is title of input that is invalid. message is a human readable string explaining the error. 401 content would be: { \"message\": \"client is unauthorized.\" } 402 content would be: { \"message\": \"client doesn't have enough credit\" } 403 content would be: { \"message\": \"client doesn't have access to the requested entity\" } 404 content would be: { \"message\": \"requested entity not found\" } 405 content would be: { \"message\": \"wrong request. wrong verb\" } 419 content would be: { \"message\": \"client is banned from service due the number of requested\" } 500 content would be: { \"message\": \"server internal error.\" }","title":"Intorduction"},{"location":"apis/#apis","text":"calcifer engine implements several apis to use it completely from outside. apis helps to outsource the project and just use the backend part. APIs are based on REST and JSON tech. there are some common rules between all apis in calcifer.","title":"APIs"},{"location":"apis/#requests","text":"requests have different parts: verb , endpoint and parameters .","title":"Requests"},{"location":"apis/#verbs","text":"verb description GET to retrive items or other informations. non-action POST to do an action. this verb doesn't create any entity in database by itself PUT create and update and actual entity in database DELETE delete an entity from database","title":"verbs"},{"location":"apis/#endpoints","text":"endpoints completely explained in REST APIs .","title":"endpoints"},{"location":"apis/#parameters","text":"you are free to send your parameters in json or form-encoded or www-urlencoded . but consider that you can upload files just when you are using form data inputs.","title":"parameters"},{"location":"apis/#responses","text":"responses have two parts: content and http response code .","title":"Responses"},{"location":"apis/#http-response-code","text":"every different http code means something: HTTP code description 200 request was successfull 400 bad request. some errors in validation of inputs 401 client is unauthorized 402 client doesn't have enough credits 403 client doesn't have access to entity 404 requested entity not found 405 requested endpoint had different verb. used wrong verb in request 419 client is spaming the service 500 server internal error","title":"HTTP Response Code"},{"location":"apis/#content","text":"contents are in json format. but the structure is different for each http response code:","title":"Content"},{"location":"apis/#200","text":"content of this http code doesn't have any structure.","title":"200"},{"location":"apis/#400","text":"content of this http code is the validation errors that happened. here is the structure: [ { \"code\" : STRING, \"field\": STRING, \"message\": STRING }, ] code is a unique merge of field and the unvalid rule. field is title of input that is invalid. message is a human readable string explaining the error.","title":"400"},{"location":"apis/#401","text":"content would be: { \"message\": \"client is unauthorized.\" }","title":"401"},{"location":"apis/#402","text":"content would be: { \"message\": \"client doesn't have enough credit\" }","title":"402"},{"location":"apis/#403","text":"content would be: { \"message\": \"client doesn't have access to the requested entity\" }","title":"403"},{"location":"apis/#404","text":"content would be: { \"message\": \"requested entity not found\" }","title":"404"},{"location":"apis/#405","text":"content would be: { \"message\": \"wrong request. wrong verb\" }","title":"405"},{"location":"apis/#419","text":"content would be: { \"message\": \"client is banned from service due the number of requested\" }","title":"419"},{"location":"apis/#500","text":"content would be: { \"message\": \"server internal error.\" }","title":"500"},{"location":"apis/resources/","text":"Resources here is a list of resources explained. ActivityTime Address title type description example title string address title my mother's home lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 plain string plain address - city City city of unit - Bid City title type description example title string city title vegas province Province city's province, it's null if the parent object was a province - lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 Demand Doctor title type description example first_name string doctor's first name john last_name string doctor's last name doe degree_id integer id of degree 32 degree_str string doctor's degree string - field_id integer id of field 32 field_str string doctor's field string - profile_url url doctor's profile picture http url http://calcifer.ir/users/849438293.jpg msc string doctor's medical science code 438938 gender UserGender user's gender code 2 Nurse title type description example first_name string nurse's first name john last_name string nurse's last name doe degree_id integer id of degree 32 degree_str string nurse's degree string - field_id integer id of field 32 field_str string nurse's field string - profile_url url nurse's profile picture http url http://calcifer.ir/users/849438293.jpg msc string nurse's medical science code 438938 gender UserGender user's gender code 2 Province title type description example title string province's title zanjan lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 User title type description example username string user's username mono email email address (string) if user didn't had email address then it's NuLL email@site.com phone phone string user's phone that registered by. 09215867485 first_name string user's first name monoli last_name string user's last name zay group_code UserGroupCode user's group code 3 UserGroupCode value description 1 admin group user 2 manager group user 3 doctor group user 4 nurse group user 5 patient group user UserGender value description 1 male 2 female Unit title type description example title string unit's title fargah mobile string mobile phone number 09214875485 telephone string telephone number 01333485847 address UnitAddress unit's address object - type [UnitType] unit type 1 group_code UnitGroupCode unit's group code 3 UnitAddress title type description example lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 plain string plain address - city City city of unit - UnitType value description 1 it's an actual unit. patients can go to place 2 it's a virtual unit. patients can't go there UnitGroupCode value description 1 hospital 2 department 3 poli-clinic 4 clinic 5 labratory","title":"Resources"},{"location":"apis/resources/#resources","text":"here is a list of resources explained.","title":"Resources"},{"location":"apis/resources/#activitytime","text":"","title":"ActivityTime"},{"location":"apis/resources/#address","text":"title type description example title string address title my mother's home lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 plain string plain address - city City city of unit -","title":"Address"},{"location":"apis/resources/#bid","text":"","title":"Bid"},{"location":"apis/resources/#city","text":"title type description example title string city title vegas province Province city's province, it's null if the parent object was a province - lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564","title":"City"},{"location":"apis/resources/#demand","text":"","title":"Demand"},{"location":"apis/resources/#doctor","text":"title type description example first_name string doctor's first name john last_name string doctor's last name doe degree_id integer id of degree 32 degree_str string doctor's degree string - field_id integer id of field 32 field_str string doctor's field string - profile_url url doctor's profile picture http url http://calcifer.ir/users/849438293.jpg msc string doctor's medical science code 438938 gender UserGender user's gender code 2","title":"Doctor"},{"location":"apis/resources/#nurse","text":"title type description example first_name string nurse's first name john last_name string nurse's last name doe degree_id integer id of degree 32 degree_str string nurse's degree string - field_id integer id of field 32 field_str string nurse's field string - profile_url url nurse's profile picture http url http://calcifer.ir/users/849438293.jpg msc string nurse's medical science code 438938 gender UserGender user's gender code 2","title":"Nurse"},{"location":"apis/resources/#province","text":"title type description example title string province's title zanjan lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564","title":"Province"},{"location":"apis/resources/#user","text":"title type description example username string user's username mono email email address (string) if user didn't had email address then it's NuLL email@site.com phone phone string user's phone that registered by. 09215867485 first_name string user's first name monoli last_name string user's last name zay group_code UserGroupCode user's group code 3","title":"User"},{"location":"apis/resources/#usergroupcode","text":"value description 1 admin group user 2 manager group user 3 doctor group user 4 nurse group user 5 patient group user","title":"UserGroupCode"},{"location":"apis/resources/#usergender","text":"value description 1 male 2 female","title":"UserGender"},{"location":"apis/resources/#unit","text":"title type description example title string unit's title fargah mobile string mobile phone number 09214875485 telephone string telephone number 01333485847 address UnitAddress unit's address object - type [UnitType] unit type 1 group_code UnitGroupCode unit's group code 3","title":"Unit"},{"location":"apis/resources/#unitaddress","text":"title type description example lon decimal (8, 6) geo longtitude decimal 34.554934 lat decimal (8, 6) geo latitude decimal 43.234564 plain string plain address - city City city of unit -","title":"UnitAddress"},{"location":"apis/resources/#unittype","text":"value description 1 it's an actual unit. patients can go to place 2 it's a virtual unit. patients can't go there","title":"UnitType"},{"location":"apis/resources/#unitgroupcode","text":"value description 1 hospital 2 department 3 poli-clinic 4 clinic 5 labratory","title":"UnitGroupCode"},{"location":"apis/rest/","text":"Rest APIs here is the complete list of APIs with their details Send Token this api sends a new token to client's phone POST /api/auth/send-token middleware: - title type description example phone string, phone number string in phone number format 09214837485 group_code UserGroupCode user group code in case of success the result would be: { \"message\": \"token sent to phnoe number\" } Verify this api verifies the code sent to phone number POST /api/auth/verify-token middleware: - | title | type | description | example | | ----- | ------ | ---------------- | ------- | | token | string | string, 6 digits | 485748 | in case of success if user was regsitered before: { \"registered\": true, \"access_token\": [TOKEN_STRING], \"expires_at\": [TIMESTAMP], \"user\": [User Model] } in case of success if user was not registered before: { \"registered\": false, \"access_token\": [TOKEN_STRING], \"expires_at\": [TIMESTAMP], } Get Profile GET /api/auth/profile middleware: auth Edit Profile POST /api/auth/profile middleware: auth Logout POST /api/auth/logout middleware: auth Search GET /api/search middleware: - Get Unit GET /api/unit/[unit-slug] middleware: - Get Doctor GET /api/doctor/[doctor-slug] middleware: - Create Visit Demand this api creates a visit demand for patient. GET /api/demands/create/visit middleware: auth parameters are: title type description example activity_time uuid4 string activity_time of unit_user 4874-vb384-48398vsckjbh239-vhvu4-vvjb4 day timestamp timestamp of the visit day in 00:00 157467632 description string optinal description about the visit time. max:200 some informations is case of success the response would be: { \"id\": UUID_OF_VISIT_TIME, \"date\": TIMESTAMP_WHEN_PATIENT_HAVE_TO_BE_IN_UNIT, } if patient profile wasn't complete then response would be: [ { \"code\" : \"profileIncomplete\" \"field\": \"profile\", \"message\": \"client's profile is incomplete.\" } ]","title":"Rest APIs"},{"location":"apis/rest/#rest-apis","text":"here is the complete list of APIs with their details","title":"Rest APIs"},{"location":"apis/rest/#send-token","text":"this api sends a new token to client's phone POST /api/auth/send-token middleware: - title type description example phone string, phone number string in phone number format 09214837485 group_code UserGroupCode user group code in case of success the result would be: { \"message\": \"token sent to phnoe number\" }","title":"Send Token"},{"location":"apis/rest/#verify","text":"this api verifies the code sent to phone number POST /api/auth/verify-token middleware: - | title | type | description | example | | ----- | ------ | ---------------- | ------- | | token | string | string, 6 digits | 485748 | in case of success if user was regsitered before: { \"registered\": true, \"access_token\": [TOKEN_STRING], \"expires_at\": [TIMESTAMP], \"user\": [User Model] } in case of success if user was not registered before: { \"registered\": false, \"access_token\": [TOKEN_STRING], \"expires_at\": [TIMESTAMP], }","title":"Verify"},{"location":"apis/rest/#get-profile","text":"GET /api/auth/profile middleware: auth","title":"Get Profile"},{"location":"apis/rest/#edit-profile","text":"POST /api/auth/profile middleware: auth","title":"Edit Profile"},{"location":"apis/rest/#logout","text":"POST /api/auth/logout middleware: auth","title":"Logout"},{"location":"apis/rest/#search","text":"GET /api/search middleware: -","title":"Search"},{"location":"apis/rest/#get-unit","text":"GET /api/unit/[unit-slug] middleware: -","title":"Get Unit"},{"location":"apis/rest/#get-doctor","text":"GET /api/doctor/[doctor-slug] middleware: -","title":"Get Doctor"},{"location":"apis/rest/#create-visit-demand","text":"this api creates a visit demand for patient. GET /api/demands/create/visit middleware: auth parameters are: title type description example activity_time uuid4 string activity_time of unit_user 4874-vb384-48398vsckjbh239-vhvu4-vvjb4 day timestamp timestamp of the visit day in 00:00 157467632 description string optinal description about the visit time. max:200 some informations is case of success the response would be: { \"id\": UUID_OF_VISIT_TIME, \"date\": TIMESTAMP_WHEN_PATIENT_HAVE_TO_BE_IN_UNIT, } if patient profile wasn't complete then response would be: [ { \"code\" : \"profileIncomplete\" \"field\": \"profile\", \"message\": \"client's profile is incomplete.\" } ]","title":"Create Visit Demand"},{"location":"db/","text":"Database calcifer database is based on mysql v5.4 and later versions. cause we use laravel platform as our backend project, we implemented everything inside the laravel as we could. so every thing in mysql db is generated by laravel migrations and models. in this chapter we explain about tables and their use cases in project. go to the (list of tables)[/db/tables]","title":"Intorduction"},{"location":"db/#database","text":"calcifer database is based on mysql v5.4 and later versions. cause we use laravel platform as our backend project, we implemented everything inside the laravel as we could. so every thing in mysql db is generated by laravel migrations and models. in this chapter we explain about tables and their use cases in project. go to the (list of tables)[/db/tables]","title":"Database"},{"location":"db/tables/","text":"Tables here is a complete list of tables in db: activity_times name type default description id uuid - primary id day_of_week smallint(6) - the day of week from 1 to 7 start_time integer(11) - hour and minute of day in timestamps finish_time integer(11) - hour and minute of day in timestamps unit_user_id uuid - relation to unit_user status smallint(6) 1 status auto_fill smallint(6) 0 autofill just_in_unit_visit smallint(6) 1 just in unit visit demand_limit smallint(6) 0 demand limit default_price integer(11) 0 default price for each demand default_deposit integer(11) 0 default deposit for each demand default_demand_time integer(11) 0 default time set for each demand created_at timestamps CURRENT_TIMESTAMPS when the row created modified_at timestamps CURRENT_TIMESTAMPS the last time row modified addresses bank_accounts bids cities consts demands demand_attachments demand_event_attachments doctors entries experiments experiment_fields migrations notifications nurses off_times password_resets patients permissions provinces report_fields report_templates transactions units unit_user users","title":"Tables"},{"location":"db/tables/#tables","text":"here is a complete list of tables in db:","title":"Tables"},{"location":"db/tables/#activity_times","text":"name type default description id uuid - primary id day_of_week smallint(6) - the day of week from 1 to 7 start_time integer(11) - hour and minute of day in timestamps finish_time integer(11) - hour and minute of day in timestamps unit_user_id uuid - relation to unit_user status smallint(6) 1 status auto_fill smallint(6) 0 autofill just_in_unit_visit smallint(6) 1 just in unit visit demand_limit smallint(6) 0 demand limit default_price integer(11) 0 default price for each demand default_deposit integer(11) 0 default deposit for each demand default_demand_time integer(11) 0 default time set for each demand created_at timestamps CURRENT_TIMESTAMPS when the row created modified_at timestamps CURRENT_TIMESTAMPS the last time row modified","title":"activity_times"},{"location":"db/tables/#addresses","text":"","title":"addresses"},{"location":"db/tables/#bank_accounts","text":"","title":"bank_accounts"},{"location":"db/tables/#bids","text":"","title":"bids"},{"location":"db/tables/#cities","text":"","title":"cities"},{"location":"db/tables/#consts","text":"","title":"consts"},{"location":"db/tables/#demands","text":"","title":"demands"},{"location":"db/tables/#demand_attachments","text":"","title":"demand_attachments"},{"location":"db/tables/#demand_event_attachments","text":"","title":"demand_event_attachments"},{"location":"db/tables/#doctors","text":"","title":"doctors"},{"location":"db/tables/#entries","text":"","title":"entries"},{"location":"db/tables/#experiments","text":"","title":"experiments"},{"location":"db/tables/#experiment_fields","text":"","title":"experiment_fields"},{"location":"db/tables/#migrations","text":"","title":"migrations"},{"location":"db/tables/#notifications","text":"","title":"notifications"},{"location":"db/tables/#nurses","text":"","title":"nurses"},{"location":"db/tables/#off_times","text":"","title":"off_times"},{"location":"db/tables/#password_resets","text":"","title":"password_resets"},{"location":"db/tables/#patients","text":"","title":"patients"},{"location":"db/tables/#permissions","text":"","title":"permissions"},{"location":"db/tables/#provinces","text":"","title":"provinces"},{"location":"db/tables/#report_fields","text":"","title":"report_fields"},{"location":"db/tables/#report_templates","text":"","title":"report_templates"},{"location":"db/tables/#transactions","text":"","title":"transactions"},{"location":"db/tables/#units","text":"","title":"units"},{"location":"db/tables/#unit_user","text":"","title":"unit_user"},{"location":"db/tables/#users","text":"","title":"users"},{"location":"libs/kavenegar/","text":"Kavenegar kavenegra is an sms panel service to implement the sms notifications inside the project. for actions like new visit , registered or ... . this service provides some rest apis to work with. we used 2 apis in this proeject: Verification verify operation in kavenegar is used for registering users. register token sms in this service is very important and we have to make sure that sms is delivered to user's phone. so we use the lookup api. lookup api uses a pattern and send to token to the phone number that user sent. if there was any problems, kavenegar calls user's phone and plays a voice that spells the token fotr him","title":"Kave Negar"},{"location":"libs/kavenegar/#kavenegar","text":"kavenegra is an sms panel service to implement the sms notifications inside the project. for actions like new visit , registered or ... . this service provides some rest apis to work with. we used 2 apis in this proeject:","title":"Kavenegar"},{"location":"libs/kavenegar/#verification","text":"verify operation in kavenegar is used for registering users. register token sms in this service is very important and we have to make sure that sms is delivered to user's phone. so we use the lookup api. lookup api uses a pattern and send to token to the phone number that user sent. if there was any problems, kavenegar calls user's phone and plays a voice that spells the token fotr him","title":"Verification"},{"location":"libs/time/","text":"Time.php this library is in App\\Drivers\\Time.php . Time library is an self versioned of the popular jdate library ((link)[https://jdf.scr.ir/]). jdate library is an open source project that has a sort of functions to work with timestamps to generate jalali date in different formats. if you take a look at jdate and compare it with Time.php, you can see that all function are the same. but for some requirements of calcifer engine. we entered a bit in source. but you can use the documetions of (jdate)[http://jdf.scr.ir]","title":"Time"},{"location":"libs/time/#timephp","text":"this library is in App\\Drivers\\Time.php . Time library is an self versioned of the popular jdate library ((link)[https://jdf.scr.ir/]). jdate library is an open source project that has a sort of functions to work with timestamps to generate jalali date in different formats. if you take a look at jdate and compare it with Time.php, you can see that all function are the same. but for some requirements of calcifer engine. we entered a bit in source. but you can use the documetions of (jdate)[http://jdf.scr.ir]","title":"Time.php"},{"location":"libs/zarinpal/","text":"ZarinPal this service provides all the finances about the calcifer project. such as online payments and a virtual bank account for project. you can read the documentions (here)[https://zarinpal.com]","title":"Zarin Pal"},{"location":"libs/zarinpal/#zarinpal","text":"this service provides all the finances about the calcifer project. such as online payments and a virtual bank account for project. you can read the documentions (here)[https://zarinpal.com]","title":"ZarinPal"}]}